// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.296
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tipset.UserStories
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class US001NewSeasonFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "US001 New season.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "US001 New season", "In order to maintain the gaming leauge \r\nAs an Administrator\r\nI want to be able t" +
                    "o create a new season", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "US001 New season")))
            {
                Tipset.UserStories.US001NewSeasonFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create season when number of weeks and players evens up")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "US001 New season")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ravendb")]
        public virtual void CreateSeasonWhenNumberOfWeeksAndPlayersEvensUp()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create season when number of weeks and players evens up", new string[] {
                        "ravendb"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("4 players", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When("I create a new season starting at 2012-08-18 and ending at 2013-05-18", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then("the created season should have 40 rounds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
 testRunner.And("there should be one round for every saturday between the start and end date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("each round should should have 1 player assigned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("each player should be assigned to every fourth round ordered by player name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Players"});
            table1.AddRow(new string[] {
                        "2012-08-18",
                        "1"});
            table1.AddRow(new string[] {
                        "2012-08-25",
                        "2"});
            table1.AddRow(new string[] {
                        "2012-09-01",
                        "3"});
            table1.AddRow(new string[] {
                        "2012-09-08",
                        "4"});
            table1.AddRow(new string[] {
                        "2012-09-15",
                        "1"});
            table1.AddRow(new string[] {
                        "2012-09-22",
                        "2"});
            table1.AddRow(new string[] {
                        "2012-09-29",
                        "3"});
            table1.AddRow(new string[] {
                        "2012-10-06",
                        "4"});
            table1.AddRow(new string[] {
                        "2012-10-13",
                        "1"});
            table1.AddRow(new string[] {
                        "2012-10-20",
                        "2"});
            table1.AddRow(new string[] {
                        "2012-10-27",
                        "3"});
            table1.AddRow(new string[] {
                        "2012-11-03",
                        "4"});
            table1.AddRow(new string[] {
                        "2012-11-10",
                        "1"});
            table1.AddRow(new string[] {
                        "2012-11-17",
                        "2"});
            table1.AddRow(new string[] {
                        "2012-11-24",
                        "3"});
            table1.AddRow(new string[] {
                        "2012-12-01",
                        "4"});
            table1.AddRow(new string[] {
                        "2012-12-08",
                        "1"});
            table1.AddRow(new string[] {
                        "2012-12-15",
                        "2"});
            table1.AddRow(new string[] {
                        "2012-12-22",
                        "3"});
            table1.AddRow(new string[] {
                        "2012-12-29",
                        "4"});
            table1.AddRow(new string[] {
                        "2013-01-05",
                        "1"});
            table1.AddRow(new string[] {
                        "2013-01-12",
                        "2"});
            table1.AddRow(new string[] {
                        "2013-01-19",
                        "3"});
            table1.AddRow(new string[] {
                        "2013-01-26",
                        "4"});
            table1.AddRow(new string[] {
                        "2013-02-02",
                        "1"});
            table1.AddRow(new string[] {
                        "2013-02-09",
                        "2"});
            table1.AddRow(new string[] {
                        "2013-02-16",
                        "3"});
            table1.AddRow(new string[] {
                        "2013-02-23",
                        "4"});
            table1.AddRow(new string[] {
                        "2013-03-02",
                        "1"});
            table1.AddRow(new string[] {
                        "2013-03-09",
                        "2"});
            table1.AddRow(new string[] {
                        "2013-03-16",
                        "3"});
            table1.AddRow(new string[] {
                        "2013-03-23",
                        "4"});
            table1.AddRow(new string[] {
                        "2013-03-30",
                        "1"});
            table1.AddRow(new string[] {
                        "2013-04-06",
                        "2"});
            table1.AddRow(new string[] {
                        "2013-04-13",
                        "3"});
            table1.AddRow(new string[] {
                        "2013-04-20",
                        "4"});
            table1.AddRow(new string[] {
                        "2013-04-27",
                        "1"});
            table1.AddRow(new string[] {
                        "2013-05-04",
                        "2"});
            table1.AddRow(new string[] {
                        "2013-05-11",
                        "3"});
            table1.AddRow(new string[] {
                        "2013-05-18",
                        "4"});
#line 14
 testRunner.Then("the created season should have the following rounds", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create season when number of weeks and players does not even up")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "US001 New season")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ravendb")]
        public virtual void CreateSeasonWhenNumberOfWeeksAndPlayersDoesNotEvenUp()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create season when number of weeks and players does not even up", new string[] {
                        "ravendb"});
#line 58
this.ScenarioSetup(scenarioInfo);
#line 59
 testRunner.When("I create a new season starting at 2012-08-18 and ending at 2013-05-11 with 4 play" +
                    "ers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Players"});
            table2.AddRow(new string[] {
                        "2012-08-18",
                        "1"});
            table2.AddRow(new string[] {
                        "2012-08-25",
                        "2"});
            table2.AddRow(new string[] {
                        "2012-09-01",
                        "3"});
            table2.AddRow(new string[] {
                        "2012-09-08",
                        "4"});
            table2.AddRow(new string[] {
                        "2012-09-15",
                        "1"});
            table2.AddRow(new string[] {
                        "2012-09-22",
                        "2"});
            table2.AddRow(new string[] {
                        "2012-09-29",
                        "3"});
            table2.AddRow(new string[] {
                        "2012-10-06",
                        "4"});
            table2.AddRow(new string[] {
                        "2012-10-13",
                        "1"});
            table2.AddRow(new string[] {
                        "2012-10-20",
                        "2"});
            table2.AddRow(new string[] {
                        "2012-10-27",
                        "3"});
            table2.AddRow(new string[] {
                        "2012-11-03",
                        "4"});
            table2.AddRow(new string[] {
                        "2012-11-10",
                        "1"});
            table2.AddRow(new string[] {
                        "2012-11-17",
                        "2"});
            table2.AddRow(new string[] {
                        "2012-11-24",
                        "3"});
            table2.AddRow(new string[] {
                        "2012-12-01",
                        "4"});
            table2.AddRow(new string[] {
                        "2012-12-08",
                        "1"});
            table2.AddRow(new string[] {
                        "2012-12-15",
                        "2"});
            table2.AddRow(new string[] {
                        "2012-12-22",
                        "3"});
            table2.AddRow(new string[] {
                        "2012-12-29",
                        "4"});
            table2.AddRow(new string[] {
                        "2013-01-05",
                        "1"});
            table2.AddRow(new string[] {
                        "2013-01-12",
                        "2"});
            table2.AddRow(new string[] {
                        "2013-01-19",
                        "3"});
            table2.AddRow(new string[] {
                        "2013-01-26",
                        "4"});
            table2.AddRow(new string[] {
                        "2013-02-02",
                        "1"});
            table2.AddRow(new string[] {
                        "2013-02-09",
                        "2"});
            table2.AddRow(new string[] {
                        "2013-02-16",
                        "3"});
            table2.AddRow(new string[] {
                        "2013-02-23",
                        "4"});
            table2.AddRow(new string[] {
                        "2013-03-02",
                        "1"});
            table2.AddRow(new string[] {
                        "2013-03-09",
                        "2"});
            table2.AddRow(new string[] {
                        "2013-03-16",
                        "3"});
            table2.AddRow(new string[] {
                        "2013-03-23",
                        "4"});
            table2.AddRow(new string[] {
                        "2013-03-30",
                        "1"});
            table2.AddRow(new string[] {
                        "2013-04-06",
                        "2"});
            table2.AddRow(new string[] {
                        "2013-04-13",
                        "3"});
            table2.AddRow(new string[] {
                        "2013-04-20",
                        "4"});
            table2.AddRow(new string[] {
                        "2013-04-27",
                        "1"});
            table2.AddRow(new string[] {
                        "2013-05-04",
                        "2"});
            table2.AddRow(new string[] {
                        "2013-05-11",
                        "3,4"});
#line 60
 testRunner.Then("the created season should have the following rounds", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
